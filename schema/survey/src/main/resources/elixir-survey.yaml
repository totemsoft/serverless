swagger: "2.0"
info:
  title: Elixir Survey
  description: API sets created by the Totem Software Pty Ltd to meet the needs of the Survey
  version: 1.0.0
  contact:
    name: Valeri Chibaev
    url: http://totemsoft.com.au/
    email: totemsoft.com.au@gmail.com
  license:
    name: Apache License Version 2.0
    url: http://www.apache.org/licenses/
host: ${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
#
# The securityDefinitions section is used to define all security schemes (authentication types) supported by the API.
# securityDefinitions:
#   OAuth2:
#     type: oauth2
#     flow: accessCode
#     authorizationUrl: https://elixir.auth.${AWS::Region}.amazoncognito.com/oauth2/authorize
#     tokenUrl: https://elixir.auth.${AWS::Region}.amazoncognito.com/oauth2/token
#     scopes:
#       read: Grants read access
#       write: Grants write access
#       admin: Grants read and write access to administrative information
paths:
  /survey/create:
    post:
      summary: Create Survey
      description: Create Survey
      operationId: create
      parameters:
        - $ref: '#/parameters/SurveyRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SurveyResponse'
  /survey/find:
    get:
      summary: Find all Surveys for user
      description: Find all Surveys for user
      operationId: findAll
      responses:
        200:
          description: An array of SurveyResponse(s)
          schema:
            type: array
            items:
              $ref: '#/definitions/SurveyResponse'
  /survey/find/{reference}:
    get:
      summary: Get Survey
      description: Get Survey
      operationId: find
      parameters:
        - $ref: '#/parameters/Reference'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SurveyResponse'
  /survey/update:
    put:
      summary: Update Survey
      description: Update Survey
      operationId: update
      parameters:
        - $ref: '#/parameters/SurveyRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SurveyResponse'
  /survey/upload/{reference}:
    post:
      summary: Upload a file.
      description: Uploads a file.
      operationId: upload
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/Reference'
        - in: formData
          name: fileUpload
          type: file
          required: true
          description: The file to upload.
        - in: formData
          name: fileNote
          type: string
          required: false
          description: Description of file content.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/UploadResponse'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
  /survey/download/{reference}:
    get:
      summary: Download a file.
      description: Download a file.
      produces:
        - 'application/*'
      operationId: download
      parameters:
        - $ref: '#/parameters/Reference'
        - $ref: '#/parameters/Filename'
      responses:
        200:
          description: Success
          schema:
            type: string
            format: binary
            #format: base64
        404:
          description: Survey not found
#
# parameters
#
parameters:
  Reference:
    in: path
    name: reference
    description: Reference (Survey Id)
    type: string
    format: UUID
    required: true
  SurveyRequest:
    name: surveyRequest
    in: body
    description: Survey Request
    required: true
    schema:
      $ref: '#/definitions/SurveyRequest'
  Filename:
    in: query
    name: filename
    description: File name
    type: string
    required: true
#
# definitions
#
definitions:
  #
  Reference:
    description: Reference (Survey Id)
    type: string
    format: UUID
  #
  FolderId:
    description: Folder Id
    type: string
  #
  DocumentId:
    description: Document Id
    type: string
  #
  Message:
    description: Message (could be error)
    type: string
  #
  SurveyRequest:
    type: object
    properties:
      reference:
        $ref: '#/definitions/Reference'
      folderId:
        $ref: '#/definitions/FolderId'
      insured:
        $ref: '#/definitions/InsuredDetails'
      survey:
        $ref: '#/definitions/SurveyDocument'
  #
  SurveyResponse:
    type: object
    required:
      - reference
    properties:
      reference:
        $ref: '#/definitions/Reference'
      folderId:
        $ref: '#/definitions/FolderId'
      insured:
        $ref: '#/definitions/InsuredDetails'
      survey:
        $ref: '#/definitions/SurveyDocument'
      message:
        $ref: '#/definitions/Message'
  # 
  UploadResponse:
    type: object
    required:
      - reference
    properties:
      reference:
        $ref: '#/definitions/Reference'
      documentId:
        $ref: '#/definitions/DocumentId'
      message:
        $ref: '#/definitions/Message'
  #
  FileType:
    type: string
    description: File Type
    enum:
      - SURVEY
      - FILE
  #
  SurveyDocument:
    type: string
    description: Survey JSON Document
  #
  InsuredDetails:
    title: InsuredDetails
    description: Insured details
    type: object
    required: 
      - email
    properties:
      firstname:
        description: Client's name
        type: string
      surname:
        description: Client's surname
        type: string
      mobile:
        description: Client's mobile
        type: string
      email:
        description: Client's email
        type: string
      companyName:
        description: Client's company name
        type: string
      tradingName:
        description: Client's trading name
        type: string
      position:
        description: Client's position
        type: string
