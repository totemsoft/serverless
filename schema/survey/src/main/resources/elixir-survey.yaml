swagger: "2.0"
info:
  title: Elixir Survey
  description: API sets created by the Totem Software Pty Ltd to meet the needs of the Survey
  version: 1.0.0
  contact:
    name: Valeri Chibaev
    url: http://totemsoft.com.au/
    email: totemsoft.com.au@gmail.com
  license:
    name: Apache License Version 2.0
    url: http://www.apache.org/licenses/
host: ${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com
basePath: /
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
#
# The securityDefinitions section is used to define all security schemes (authentication types) supported by the API.
# securityDefinitions:
#   OAuth2:
#     type: oauth2
#     flow: accessCode
#     authorizationUrl: https://elixir.auth.${AWS::Region}.amazoncognito.com/oauth2/authorize
#     tokenUrl: https://elixir.auth.${AWS::Region}.amazoncognito.com/oauth2/token
#     scopes:
#       read: Grants read access
#       write: Grants write access
#       admin: Grants read and write access to administrative information
paths:
  /client/find:
    get:
      summary: Receives all clients.
      description: Receives all clients for a user.
      operationId: findClients
      responses:
        200:
          description: An array of Client(s)
          schema:
            type: array
            items:
              $ref: '#/definitions/ClientResponse'
  /client/find/{userId}:
    get:
      summary: Receives all clients.
      description: Receives all clients for a user.
      operationId: findClientsByUser
      parameters:
        - $ref: '#/parameters/UserId'
      responses:
        200:
          description: An array of Client(s)
          schema:
            type: array
            items:
              $ref: '#/definitions/ClientResponse'
  /survey/create:
    post:
      summary: Create Survey.
      description: Create Survey for user (current selected client/location).
      operationId: createSurvey
      parameters:
        - $ref: '#/parameters/RequestHeader_Client'
        - $ref: '#/parameters/RequestHeader_Location'
        - $ref: '#/parameters/SurveyRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SurveyResponse'
  /survey/find:
    get:
      summary: Find all Surveys for user.
      description: Find all Surveys for user (current selected client/location).
      operationId: findSurveys
      parameters:
        - $ref: '#/parameters/RequestHeader_Client'
        - $ref: '#/parameters/RequestHeader_Location'
      responses:
        200:
          description: An array of SurveyResponse(s)
          schema:
            type: array
            items:
              $ref: '#/definitions/SurveyResponse'
  /survey/find/{reference}/{folderId}:
    get:
      summary: Get Survey.
      description: Get Survey (by reference).
      operationId: findSurvey
      parameters:
        - $ref: '#/parameters/RequestHeader_Client'
        - $ref: '#/parameters/RequestHeader_Location'
        - $ref: '#/parameters/Reference'
        - $ref: '#/parameters/FolderId'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SurveyResponse'
  /survey/update:
    put:
      summary: Update Survey.
      description: Update Survey (for reference).
      operationId: updateSurvey
      parameters:
        - $ref: '#/parameters/RequestHeader_Client'
        - $ref: '#/parameters/RequestHeader_Location'
        - $ref: '#/parameters/SurveyRequest'
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SurveyResponse'
  /survey/upload/{reference}/{folderId}:
    post:
      summary: Upload a file.
      description: Uploads a file (for Survey).
      operationId: upload
      consumes:
        - multipart/form-data
      parameters:
        - $ref: '#/parameters/Reference'
        - $ref: '#/parameters/FolderId'
        - in: formData
          name: fileUpload
          type: file
          required: true
          description: The file to upload.
        - in: formData
          name: fileNote
          type: string
          required: false
          description: Description of file content.
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/UploadResponse'
        401:
          description: Not authenticated
        403:
          description: Access token does not have the required scope
  /survey/download/{reference}/{folderId}:
    get:
      summary: Download a file.
      description: Download a file (for Survey).
      produces:
        - 'application/*'
        - 'image/*'
      operationId: download
      parameters:
        - $ref: '#/parameters/Reference'
        - $ref: '#/parameters/FolderId'
        - $ref: '#/parameters/Filename'
      responses:
        200:
          description: Success
          schema:
            type: string
            format: binary
            #format: base64
        404:
          description: File not found
#
# parameters
#
parameters:
  RequestHeader_Client:
    in: header
    name: client
    description: Client Name
    type: string
    required: true
  RequestHeader_Location:
    in: header
    name: location
    description: Location Name
    type: string
    #required: false
  UserId:
    in: path
    name: userId
    description: User Id
    type: string
    #required: false
  Reference:
    in: path
    name: reference
    description: Reference (Survey Id)
    type: string
    format: UUID
    required: true
  FolderId:
    in: path
    name: folderId
    description: Folder Id
    type: string
    required: true
  SurveyRequest:
    name: surveyRequest
    in: body
    description: Survey Request
    required: true
    schema:
      $ref: '#/definitions/SurveyRequest'
  Filename:
    in: query
    name: filename
    description: File name
    type: string
    required: true
#
# definitions
#
definitions:
  #
  Reference:
    description: Reference (Survey Id)
    type: string
    format: UUID
  #
  Id:
    description: Entity Id (primary key)
    type: integer
  #
  FolderId:
    description: Folder Id
    type: string
  #
  DocumentId:
    description: Document Id
    type: string
  #
  Message:
    description: Message (could be error)
    type: string
  #
  SurveyRequest:
    type: object
    properties:
      reference:
        $ref: '#/definitions/Reference'
      folderId:
        $ref: '#/definitions/FolderId'
      broker:
        $ref: '#/definitions/BrokerDetails'
      insured:
        $ref: '#/definitions/InsuredDetails'
      survey:
        $ref: '#/definitions/SurveyDocument'
  #
  SurveyResponse:
    description: Survey details.
    type: object
    properties:
      reference:
        $ref: '#/definitions/Reference'
      folderId:
        $ref: '#/definitions/FolderId'
      broker:
        $ref: '#/definitions/BrokerDetails'
      insured:
        $ref: '#/definitions/InsuredDetails'
      survey:
        $ref: '#/definitions/SurveyDocument'
      message:
        $ref: '#/definitions/Message'
  # 
  UploadResponse:
    type: object
    required:
      - reference
      - documentId
    properties:
      reference:
        $ref: '#/definitions/Reference'
      documentId:
        $ref: '#/definitions/DocumentId'
      message:
        $ref: '#/definitions/Message'
  #
  SurveyDocument:
    type: string
    description: Survey JSON Document
  #
  FileType:
    type: string
    description: File Type
    enum:
    - BUSINESS
    - FARM
  #
  AddressType:
    type: string
    description: Address type
    enum:
    - STREET
    - POSTAL
  #
  Address:
    description: Address details
    type: object
    required:
    - id
    - type
    - addressLine1
    properties:
      id:
        $ref: '#/definitions/Id'
      type:
        $ref: '#/definitions/AddressType'
      addressLine1:
        description: Address line
        type: string
      addressLine2:
        description: Address line
        type: string
      suburb:
        description: Suburb
        type: string
      state:
        description: State
        type: string
      postCode:
        description: Post code
        type: string
  #
  PhoneType:
    type: string
    description: Phone types
    enum:
    - FAX
    - MOBILE
    - WORK
  #
  Phone:
    title: Phone details
    type: object
    required:
    - type
    - number
    properties:
      type:
        $ref: '#/definitions/PhoneType'
      number:
        type: string
  #
  Location:
    title: Location.
    description: Location.
    type: object
    required:
    - id
    - name
    properties:
      id:
        $ref: '#/definitions/Id'
      name:
        description: Location name
        type: string
      addresses:
        description: Location addresses
        type: array
        items:
          $ref: '#/definitions/Address'
  #
  ClientResponse:
    title: Client
    description: Client details
    type: object
    required:
    - company
    - firstName
    - lastName
    - email
    properties:
      company:
        description: Client's company name (has to be unique)
        type: string
      tradingName:
        description: Client's trading name
        type: string
      firstName:
        description: Client's firstname
        type: string
      lastName:
        description: Client's surname
        type: string
      email:
        description: Client's email
        type: string
      position:
        description: Client's position
        type: string
      phones:
        description: Client's phones
        type: array
        items:
          $ref: '#/definitions/Phone'
      addresses:
        description: Client's addresses
        type: array
        items:
          $ref: '#/definitions/Address'
      locations:
        description: Client's locations
        type: array
        items:
          $ref: '#/definitions/Location'
  #
  InsuredDetails:
    title: InsuredDetails
    description: Insured details
    type: object
    required: 
    - email
    properties:
      firstname:
        description: Insured name
        type: string
      surname:
        description: Insured surname
        type: string
      mobile:
        description: Insured mobile
        type: string
      email:
        description: Insured email
        type: string
      companyName:
        description: Insured company name
        type: string
      tradingName:
        description: Insured trading name
        type: string
      position:
        description: Insured position
        type: string
  #
  BrokerDetails:
    title: Broker Details.
    description: Broker details.
    type: object
    required: 
    - client
    properties:
      id:
        description: Broker Id (email)
        type: string
      client:
        description: Broker's Client ( current selected)
        type: string
