{
  "swagger": "2.0",
  "info": {
    "title": "Elixir Survey",
    "description": "API sets created by the Totem Software Pty Ltd to meet the needs of the Survey",
    "version": "1.0.0",
    "contact": {
      "name": "Valeri Chibaev",
      "url": "http://totemsoft.com.au/",
      "email": "totemsoft.com.au@gmail.com"
    },
    "license": {
      "name": "Apache License Version 2.0",
      "url": "http://www.apache.org/licenses/"
    }
  },
  "host": "survey.holder.com.au",
  "basePath": "/survey-au/v1",
  "schemes": [
    "https"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/survey/questions": {
      "post": {
        "summary": "Get Survey Questions",
        "description": "Obtain a list of survey questions",
        "operationId": "surveyQuestions",
        "x-scopes": [
          "survey:questions.basic:read"
        ],
        "tags": [
          "Survey"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/RequestHeader_x-v"
          },
          {
            "$ref": "#/parameters/RequestSurvey"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "headers": {
              "x-v": {
                "type": "string",
                "description": "The [version](#response-headers) of the API end point that the data holder has responded with."
              }
            },
            "schema": {
              "$ref": "#/definitions/ResponseSurvey"
            }
          }
        },
        "x-version": "1"
      }
    }
  },
  "parameters": {
    "RequestHeader_x-v": {
      "name": "x-v",
      "description": "Version of the API end point requested by the client. Must be set to a positive integer. The data holder should respond with the highest supported version between [x-min-v](#request-headers) and [x-v](#request-headers). If the value of [x-min-v](#request-headers) is equal to or higher than the value of [x-v](#request-headers) then the [x-min-v](#request-headers) header should be treated as absent. If all versions requested are not supported then the data holder must respond with a 406 Not Acceptable. See [HTTP Headers](#request-headers)",
      "in": "header",
      "type": "string",
      "required": true
    },
    "RequestSurvey": {
      "name": "surveyRequest",
      "in": "body",
      "description": "Survey Request",
      "required": true,
      "schema": {
        "$ref": "#/definitions/RequestSurvey"
      }
    }
  },
  "definitions": {
    "RequestSurvey": {
      "type": "object",
      "required": [
        "surveyId"
      ],
      "properties": {
        "surveyId": {
          "type": "string",
          "description": "Survey Id"
        }
      }
    },
    "ResponseSurvey": {
      "type": "object",
      "required": [
        "data"
      ],
      "properties": {
        "data": {
          "type": "object",
          "required": [
            "questions"
          ],
          "properties": {
            "questions": {
              "description": "The list of questions returned. If the filter results in an empty set then this array may have no records",
              "type": "array",
              "items": {
                "$ref": "#/definitions/Question"
              }
            }
          }
        }
      }
    },
    "Question": {
      "type": "object",
      "required": [
        "type",
        "text",
        "answers"
      ],
      "properties": {
        "type": { "$ref": "#/definitions/QuestionType" },
        "text": {
          "type": "string",
          "description": "Question text"
        },
        "answers": {
          "description": "An array of question answers",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Answer"
          }
        }
      }
    },
    "QuestionType": {
      "type": "string",
      "description": "Question Types",
      "enum": [
        "TEXT",
        "RADIOGROUP",
        "DROPDOWN",
        "CHECKBOXES",
        "BOOLEAN",
        "COMMENT"
      ]
    },
    "Answer": {
      "type": "object",
      "description": "Question Answer",
      "required": [
        "text"
      ],
      "properties": {
        "text": {
          "type": "string",
          "description": "Answer text"
        }
      }
    }
  }
}
